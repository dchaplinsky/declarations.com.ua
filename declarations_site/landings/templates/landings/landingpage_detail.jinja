{% extends "base.jinja" %}


{% block extra_js %}
    {% javascript 'js_charts' %}


    <script type="text/javascript">
        function format_uah(value) {
            return accounting.formatMoney(value, "₴", 2);
        }

        $(function() {
            var all_data, chart;

            function build_main_chart() {
                var year = parseInt($("#year").val());
                var data = [],
                    param_x = {
                        "name": "incomes.declarant",
                        "title": "Дохід декларанта"
                    },
                    param_y = {
                        "name": "incomes.family",
                        "title": "Дохід родини"
                    },
                    param_r = {
                        "name": "assets.total",
                        "title": "Статки"
                    },

                    max_r = 0,
                    max_estate = 0,
                    options = {
                        legend: false,
                        scales: {
                            xAxes: [{
                                scaleLabel: {
                                    display: true,
                                    labelString: param_x.title,
                                    fontColor: "#5ECBA1",
                                    fontSize: 14,
                                    fontStyle: "bold",

                                },
                                ticks: {
                                    fontColor: "#5ECBA1",
                                    fontSize: 14,
                                    fontStyle: "bold",
                                    // Include a dollar sign in the ticks
                                    callback: function(value, index, values) {
                                        return format_uah(value);
                                    }
                                }
                            }],
                            yAxes: [{
                                scaleLabel: {
                                    fontColor: "#7175D8",
                                    fontStyle: "bold",
                                    fontSize: 14,
                                    display: true,
                                    labelString: param_y.title,
                                },
                                ticks: {
                                    fontColor: "#7175D8",
                                    fontSize: 14,
                                    fontStyle: "bold",
                                    // Include a dollar sign in the ticks
                                    callback: function(value, index, values) {
                                        return format_uah(value);
                                    }
                                }
                            }]
                        },
                        tooltips: {
                            mode: 'index',
                            intersect: true,

                            callbacks: {
                                label: function(tooltipItem, data) {
                                    var point = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                                    return (point.label || '');
                                },

                                afterLabel: function(tooltipItem, data) {
                                    var point = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                                    return [
                                        param_x.title + ": " + format_uah(point.x),
                                        param_y.title + ": " + format_uah(point.y),
                                        param_r.title + ": " + format_uah(point.v),
                                        "Прапорці: " + point.flags,
                                        "Загальна площа нерухомості: " + point.estate
                                    ];
                                }
                            }
                        },

                        elements: {
                            point: {
                                backgroundColor: function(context) {
                                    var value = context.dataset.data[context.dataIndex],
                                        level = value.scaled_estate,
                                        r = Math.round(255 * (1 - level) + 113 * level),
                                        g = Math.round(255 * (1 - level) + 118 * level),
                                        b = Math.round(255 * (1 - level) + 216 * level);
                                    return 'rgba(' + r + ',' + g + ',' + b + ',0.7)';
                                },

                                borderWidth: function(context) {
                                    var value = context.dataset.data[context.dataIndex];
                                    if (value.flags) {
                                        return Math.min(value.flags / 3 + 0.5, 3);
                                    }
                                    return 1
                                },

                                hoverBackgroundColor: 'transparent',

                                borderColor: function(context) {
                                    var value = context.dataset.data[context.dataIndex];
                                    if (value.flags) {
                                        return "#FF6B69";
                                    }
                                },

                                radius: function(context) {
                                    var value = context.dataset.data[context.dataIndex],
                                        size = context.chart.width;
                                    return 5 + (size / 20) * value.scaled_r;
                                }
                            }
                        }
                    };

                for (var i = 0; i < all_data["persons"].length; i++) {
                    var docs = all_data["persons"][i]["documents"];
                    for (var j = docs.length - 1; j >= 0; j--) {
                        var doc = docs[j],
                            x = doc["aggregated_data"][param_x.name],
                            y = doc["aggregated_data"][param_y.name],
                            r = doc["aggregated_data"][param_r.name],
                            estate = doc["aggregated_data"]["estate.total_other"];

                        if (doc["year"] == year) {
                            if (r > max_r) {
                                max_r = r;
                            }
                            if (estate > max_estate) {
                                max_estate = estate;
                            }

                            data.push({
                                "id": all_data["persons"][i]["id"],
                                "label": all_data["persons"][i]["name"],
                                "x": x,
                                "y": y,
                                "v": r,
                                "flags": doc["flags"].length,
                                "estate": estate,
                            });
                            break;
                        }
                    }
                }

                for (var i = 0; i < data.length; i++) {
                    data[i]["scaled_r"] = (data[i]["v"] + 0.1) / (max_r + 0.1);
                    data[i]["scaled_estate"] = (Math.min(data[i]["estate"], 500) + 0.1) / (500 + 0.1);
                }

                if (typeof(chart) === "undefined") {
                    chart = new Chart('tablo', {
                        type: 'bubble',
                        data: {
                            datasets: [{
                                "data": data
                            }]
                        },
                        options: options
                    });
                } else {
                    chart.data.datasets = [{"data": data}];
                    chart.update();
                }
            };

            $.getJSON("?format=json", function(data){
                all_data = data;

                build_main_chart();
            });

            $("#year").on("change", function() {
                build_main_chart();
            })

        });
    </script>
{% endblock %}

{% block content %}

    <div class="content container">
        <div class="search-card search-page__result-card">
            <div class="search-card__top">
                <div class="search-card__name">
                    {{ object.title }}
                </div>
            </div>

            <div class="search-card__items">
                <div class="search-card__item">
                    <div class="search-card__item-text gray_text">
                        {% if object.image %}
                        <img src="{{ object.image['avatar'].url }}" alt="{{ object.title }}"/>
                        {% endif %}
                        {{ object.description|safe }}
                    </div>
                </div>
            </div>
        </div>

        <select id="year">
            {% for year in range(summary.min_year, summary.max_year + 1) %}
                <option value="{{ year }}" {% if year == CURR_YEAR - 1 %}selected="selected"{% endif %}>{{ year }}</option>
            {% endfor %}
        </select>
        <canvas id="tablo"></canvas>
    </div>
    <style type="text/css">
        #tablo {
            width: 100%;
            height: 400px;
        }
        .gray_text {
            font-family: Inter;
            font-style: normal;
            font-weight: 500;
            font-size: 16px;
            line-height: 24px;
            max-width: 100%;
            color: #898D93;
        }
        .search-card__item-text img {
            float: left;
            padding-right: 10px;
        }
    </style>
{% endblock %}