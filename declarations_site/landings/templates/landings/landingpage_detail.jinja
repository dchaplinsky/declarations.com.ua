{% extends "base.jinja" %}


{% block extra_js %}
    {% javascript 'js_charts' %}


    <script type="text/javascript">
        function format_uah(value) {
            return accounting.formatMoney(value, "₴", 2);
        }
        function format_sqm(value) {
            return accounting.formatMoney(value, {symbol: "м²",  format: "%v %s"}, 2 )
        }

        $(function() {
            var all_data, chart;

            var customTooltips = function(tooltip) {
                var this_chart = this;
                $(this._chart.canvas).css('cursor', 'pointer');

                var positionY = this._chart.canvas.offsetTop;
                var positionX = this._chart.canvas.offsetLeft;

                $('.chartjs-tooltip').css({
                    opacity: 0,
                });

                if (!tooltip || !tooltip.opacity) {
                    return;
                }

                if (tooltip.dataPoints.length > 0) {
                    tooltip.dataPoints.forEach(function(dataPoint) {
                        var point = this_chart._data.datasets[dataPoint.datasetIndex].data[dataPoint.index];
                        var content = [dataPoint.xLabel, dataPoint.yLabel].join(': ');
                        var $tooltip = $('#main-tooltip');

                        $tooltip.find(".tooltip_name .value").html(point.name);
                        $tooltip.find(".tooltip_income .value").html(format_uah(point.income));
                        $tooltip.find(".tooltip_cash .value").html(format_uah(point.cash));
                        $tooltip.find(".tooltip_liabilities .value").html(format_uah(point.liabilities));
                        $tooltip.find(".tooltip_expenses .value").html(format_uah(point.expenses));
                        $tooltip.find(".tooltip_land .value").html(format_sqm(point.land));
                        $tooltip.find(".tooltip_real_estate .value").html(format_sqm(point.real_estate));
                        $tooltip.find(".tooltip_assets .value").html(format_uah(point.assets));


                        $tooltip.css({
                            opacity: 1,
                            top: positionY + dataPoint.y + 'px',
                            left: positionX + dataPoint.x + 'px',
                        });
                    });
                }
            };

            function build_main_chart() {
                var year = parseInt($("#year").val());
                var data = [],
                    param_x = {
                        "name": "incomes.declarant",
                        "title": "Дохід декларанта"
                    },
                    param_y = {
                        "name": "incomes.family",
                        "title": "Дохід родини"
                    },
                    param_r = {
                        "name": "assets.total",
                        "title": "Статки"
                    },

                    max_r = 0,
                    max_estate = 0,
                    options = {
                        legend: false,
                        scales: {
                            xAxes: [{
                                scaleLabel: {
                                    display: true,
                                    labelString: param_x.title,
                                    fontColor: "#5ECBA1",
                                    fontSize: 14,
                                    fontStyle: "bold",

                                },
                                ticks: {
                                    fontColor: "#5ECBA1",
                                    fontSize: 14,
                                    fontStyle: "bold",
                                    // Include a dollar sign in the ticks
                                    callback: function(value, index, values) {
                                        return format_uah(value);
                                    }
                                }
                            }],
                            yAxes: [{
                                scaleLabel: {
                                    fontColor: "#7175D8",
                                    fontStyle: "bold",
                                    fontSize: 14,
                                    display: true,
                                    labelString: param_y.title,
                                },
                                ticks: {
                                    fontColor: "#7175D8",
                                    fontSize: 14,
                                    fontStyle: "bold",
                                    // Include a dollar sign in the ticks
                                    callback: function(value, index, values) {
                                        return format_uah(value);
                                    }
                                }
                            }]
                        },
                        tooltips: {
                            mode: 'index',
                            intersect: true,
                            custom: customTooltips,
                            enabled: false,

                            callbacks: {
                                label: function(tooltipItem, data) {
                                    var point = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                                    return (point.label || '');
                                },

                                afterLabel: function(tooltipItem, data) {
                                    var point = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                                    return [
                                        param_x.title + ": " + format_uah(point.x),
                                        param_y.title + ": " + format_uah(point.y),
                                        param_r.title + ": " + format_uah(point.v),
                                        "Прапорці: " + point.flags,
                                        "Загальна площа нерухомості: " + point.estate
                                    ];
                                }
                            }
                        },

                        elements: {
                            point: {
                                backgroundColor: function(context) {
                                    var value = context.dataset.data[context.dataIndex],
                                        level = value.scaled_estate,
                                        r = Math.round(255 * (1 - level) + 113 * level),
                                        g = Math.round(255 * (1 - level) + 118 * level),
                                        b = Math.round(255 * (1 - level) + 216 * level);
                                    return 'rgba(' + r + ',' + g + ',' + b + ',0.7)';
                                },

                                borderWidth: function(context) {
                                    var value = context.dataset.data[context.dataIndex];
                                    if (value.flags) {
                                        return Math.min(value.flags / 3 + 0.5, 3);
                                    }
                                    return 1
                                },

                                hoverBackgroundColor: 'transparent',

                                borderColor: function(context) {
                                    var value = context.dataset.data[context.dataIndex];
                                    if (value.flags) {
                                        return "#FF6B69";
                                    }
                                },

                                radius: function(context) {
                                    var value = context.dataset.data[context.dataIndex],
                                        size = context.chart.width;
                                    return 5 + (size / 20) * value.scaled_r;
                                }
                            }
                        }
                    };

                for (var i = 0; i < all_data["persons"].length; i++) {
                    var docs = all_data["persons"][i]["documents"];
                    for (var curr_year in docs) {
                        if (curr_year != year)
                            continue;

                        var doc = docs[curr_year],
                            x = doc["aggregated_data"][param_x.name],
                            y = doc["aggregated_data"][param_y.name],
                            r = doc["aggregated_data"][param_r.name],
                            estate = doc["aggregated_data"]["estate.total_other"];

                        if (r > max_r) {
                            max_r = r;
                        }
                        if (estate > max_estate) {
                            max_estate = estate;
                        }

                        data.push({
                            "id": all_data["persons"][i]["id"],
                            "name": all_data["persons"][i]["name"],
                            "income": doc["aggregated_data"]["incomes.total"],
                            "cash": doc["aggregated_data"]["assets.cash.total"],
                            "liabilities": doc["aggregated_data"]["liabilities.total"],
                            "expenses": doc["aggregated_data"]["expenses.total"],
                            "land": doc["aggregated_data"]["estate.total_land"],
                            "real_estate": doc["aggregated_data"]["estate.total_other"],
                            "assets": doc["aggregated_data"]["assets.total"],
                            "x": x,
                            "y": y,
                            "v": r,
                            "flags": doc["flags"].length,
                            "estate": estate,
                        });
                    }
                }

                for (var i = 0; i < data.length; i++) {
                    data[i]["scaled_r"] = (data[i]["v"] + 0.1) / (max_r + 0.1);
                    data[i]["scaled_estate"] = (Math.min(data[i]["estate"], 500) + 0.1) / (500 + 0.1);
                }

                if (typeof(chart) === "undefined") {
                    chart = new Chart('tablo', {
                        type: 'bubble',
                        data: {
                            datasets: [{
                                "data": data
                            }]
                        },
                        options: options
                    });
                } else {
                    chart.data.datasets = [{"data": data}];
                    chart.update();
                }
            };

            $.getJSON("?format=json", function(data){
                all_data = data;

                build_main_chart();
            });

            $("#year").on("change", function() {
                build_main_chart();
            })

        });
    </script>
{% endblock %}

{% block content %}

    <div class="content container">
        <div class="search-card search-page__result-card">
            <div class="search-card__top">
                <div class="search-card__name">
                    {{ object.title }}
                </div>
            </div>

            <div class="search-card__items">
                <div class="search-card__item">
                    <div class="search-card__item-text gray_text">
                        {% if object.image %}
                        <img src="{{ object.image['avatar'].url }}" alt="{{ object.title }}"/>
                        {% endif %}
                        {{ object.description|safe }}
                    </div>
                </div>
            </div>
        </div>

        <select id="year">
            {% for year in range(summary.min_year, summary.max_year + 1) %}
                <option value="{{ year }}" {% if year == CURR_YEAR - 1 %}selected="selected"{% endif %}>{{ year }}</option>
            {% endfor %}
        </select>
        <canvas id="tablo"></canvas>
        <div class="chartjs-tooltip" id="main-tooltip">
            <div class="tooltip_name"><span class="value"></span></div>
            <div class="tooltip_income"><span>{{ _("Дохід") }}</span><span class="value"></span></div>
            <div class="tooltip_cash"><span>{{ _("Кеш") }}</span><span class="value"></span></div>
            <div class="tooltip_liabilities"><span>{{ _("Борги") }}</span><span class="value"></span></div>
            <div class="tooltip_expenses"><span>{{ _("Витрати") }}</span><span class="value"></span></div>
            <div class="tooltip_real_estate"><span>{{ _("Нерухомість") }}</span><span class="value"></span></div>
            <div class="tooltip_land"><span>{{ _("Земля") }}</span><span class="value"></span></div>
            <hr/>
            <div class="tooltip_assets">{{ _("Загальні статки") }}</span><span class="value"></span></div>
        </div>

        <a href="?format=xlsx">{{ _("експорт в excel") }}</a>
        {% for year in range(summary.min_year, summary.max_year + 1) %}
        <table id="declarants-{{ year }}" {% if year != CURR_YEAR - 1 %}style="display: none"{% endif %}>
            <thead>
                <tr>
                    <th>{{ _("Повне ім’я") }}</th>
                    <th>{{ _("Червоні прапори") }}</th>
                    <th>{{ _("Доходи") }}</th>
                    <th>{{ _("Активи") }}</th>
                    <th>{{ _("Авто") }}</th>
                    <th>{{ _("Нерухомість") }}</th>
                </tr>
            </thead>
            <tbody>
                {% for person in summary.persons %}
                <tr>

                    {% if year in person.documents %}
                        <td>
                            <a href="{{ person.id }}">{{ person.name }}</a>
                        </td>
                        {% set doc = person.documents[year] %}
                        <td>{{ doc.flags|count }}</td>
                        <td>₴{{ doc.aggregated_data["incomes.total"]|string|curformat() }}</td>
                        <td>₴{{ doc.aggregated_data["assets.total"]|string|curformat() }}</td>
                        <td>{{ doc.aggregated_data["vehicles.all_names"]|replace("; ", "<br/>")|safe }}</td>
                        <td>{{ doc.aggregated_data["estate.total_other"]|string|curformat() }}{{ _("м²") }}</td>
                    {% endif %}
                </tr>
                {% endfor %}
                {% for person in summary.persons %}
                <tr>
                    {% if year not in person.documents %}
                        <td>
                            <a href="{{ person.id }}">{{ person.name }}</a>
                        </td>
                        <td>—</td>
                        <td>—</td>
                        <td>—</td>
                        <td>—</td>
                        <td>—</td>
                    {% endif %}
                </tr>
                {% endfor %}

            </tbody>
        </table>
        {% endfor %}
    </div>
    <style type="text/css">
        #tablo {
            width: 100%;
            height: 400px;
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }

        .chartjs-tooltip {
            opacity: 0;
            position: absolute;
            background: rgba(0, 0, 0, .7);
            color: white;
            border-radius: 3px;
            -webkit-transition: all .1s ease;
            transition: all .1s ease;
            pointer-events: none;
            -webkit-transform: translate(-50%, 0);
            transform: translate(-50%, 0);
            padding: 4px;
        }

        .chartjs-tooltip-key {
            display: inline-block;
            width: 10px;
            height: 10px;
        }

        .gray_text {
            font-family: Inter;
            font-style: normal;
            font-weight: 500;
            font-size: 16px;
            line-height: 24px;
            max-width: 100%;
            color: #898D93;
        }
        .search-card__item-text img {
            float: left;
            padding-right: 10px;
        }
    </style>
{% endblock %}